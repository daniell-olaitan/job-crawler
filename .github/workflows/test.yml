name: Auto Merge Pull Request

on:
  pull_request:
    types: [synchronize, opened, reopened]
  workflow_dispatch:

permissions:
  pull-requests: write
  contents: read
  issues: read
  actions: read

jobs:
  merge:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Check collaborator
        id: check-collaborator
        run: |
          # Get the list of collaborators for the repository
          github_api_url="https://api.github.com/repos/${{ github.repository }}/collaborators/${{ github.actor }}"
          response=$(curl -s -X GET -H "Authorization: Bearer ${GITHUB_TOKEN}" "${github_api_url}")

          # Check if the response indicates that the user is a collaborator
          if echo "$response" | grep -q '"permissions": {"admin":'; then
            echo "User is a collaborator."
            echo "is_collaborator=true" >> $GITHUB_ENV
          else
            echo "User is NOT a collaborator."
            echo "is_collaborator=false" >> $GITHUB_ENV
          fi

      - name: Check merge conflicts
        run: |
          merge_conflicts=$(git merge --no-commit --no-ff origin/${{ github.event.pull_request.base.ref }} origin/${{ github.event.pull_request.head.ref }} 2>&1)
          if [[ $merge_conflicts == *"CONFLICT"* ]]; then
            echo "Merge conflicts detected."
            exit 1
          fi

      - name: Merge PR
        if: env.is_collaborator == 'true'
        run: |
          git merge --no-commit --no-ff origin/${{ github.event.pull_request.base.ref }} origin/${{ github.event.pull_request.head.ref }}
          git push origin ${GITHUB_EVENT_PULL_REQUEST_BASE_REF}
          # Update PR status to merged
          github_api_url="https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/merge"
          curl -s -X PUT -H "Authorization: Bearer ${GITHUB_TOKEN}" -d '{"commit_title":"Automatically merged PR","commit_message":"This PR was automatically merged by the workflow.","sha":"${{ github.sha }}"}' "${github_api_url}"

      - name: Comment on PR
        run: |
          curl -s -X POST -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          -d '{"body":"Automatically merged PR"}' \
          "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments"
